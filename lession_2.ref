What happens when you initialize a repository? Why do you need to do it?
A: A .git file is created in the current path. A repository can be initialized by $git init command. A git repository needs to be created in order to check in the files I am working on.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

A: We can add files to the staging area before commiting them on to the repository. The idea is to commit the changes for a single logical change at a time so the addition of files to the staging area allows the inclusion of multiple files before commiting.
Command to add files to Staging Area is:
$ git add <filename>

How can you use the staging area to make sure you have one commit per logical change?

A: We can add only the relevant files into the staging area per check-in to make sure only to cover one logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

